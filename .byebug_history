c
self
body
changed
changed_attributes.class
changed_attributes
changed_attribute
changes.class
changes
changed?
body_changed?
self
seld
c
@blog.body_changed?
@blog
self
blog_params[:body].changed?
blog_params[:body]
blog_params
params
@blog.changed?
c
n
self
c
n
self
c
n
cn
c
n
c
user.id
user
self.id
self
MODELNAME
c
self.model_name
self.model_name.name
c
activities
c
"create_activity_for_#{activities[1].downcase}_#{activities[0]}"
"create_activity_for_#{activities[1].downcase}_#{activities[0]"
create_activity_for_#{activities[1].downcase}_#{activities[0]
activities[1].downcase
c
activities[2].id
activities[3].id
activities[3]
activities
c
self.model_name.name
self.model_name
c
activities[1].name
activities[1]
activities
c
argument[1]
activities[0]
activities
c
define_method("create_activity_for_#{activities[1]}") do puts "hello" end
define_method("create_activity_for_#{activities[1]}")
activities
activities.length-1
activities.length
Activities.length
 activities.each do |activity| puts "create_activity_for_#{activity}" end
 activities.each do |activity| puts activity end
activities.each {|a| puts a}
n
c
n
activity
n
c
Activity.create(name: activities[0], user_activity_id: activities[2].id, user_activity_type: activities[1])
activities[3].id
activities[3].class
activities[2].class
activities[2]
activities
["blogs", :update, #<Blog id: 21, title: "Fauna", category: "Flora and Fauna", user_id: 4, created_at: "2016-06-13 07:12:58", updated_at: "2016-06-15 07:15:44", body: "<p>I'm writing this blog to try and create awarene...">, #<User id: 15, f_name: "Manisha", l_name: "Darade", address: "XYZ", email: "manisha.darade@kiprosh.com", phone: "475649698", about_user: "XYZ", created_at: "2016-06-13 12:24:08", updated_at: "2016-06-16 10:02:24", password: "password", user_role_id: 2>]
activities.class
for i in 0..activities.length-1
for i in 0..activities
activity
activities[2].id
activities[2].class
activities[2]
activities[1]
activities[0]
activities
c
current_user
blog
activity
activity,
MODELNAME
c
activities
activity
c
activity
current_user
:activity
:activity,
:current_user
MODELNAME
c
:current_user
current_user
MODELNAME
blog
activity
c
self
MODELNAME
c
params[:user][:user_role_id]
n
c
@change_user
@change_role
n
params
c
params
c
f
c
@user
change_role_user_url(:user)
change_role_user(:user)
:user
user
self
c
params
c
params
c
current_user.user_role.role == 0
current_user.user_role
current_user.user_role.role
c
n
c
n
c
n
@blog.id
c
@blog.body
@blog
self
@blog.changed
@blog.changed?
c
n
s
activity_type_id
n
c
Activity.create(approved: 0, user_id: user_id, activity_type_id: activity_type_id.id)
n
Activity.create(approved: 0, user_id: user_id, activity_type_id: activity_type_id.id)
 ActivityType.find_by(activity_type: activity_type).id
 ActivityType.find_by(activity_type: activity_type)
activity_type
c
n
activity_type
n
c
act_type = params[:controller] + '.' + params[:action]
act_type = params[:controller] + params[:action]
params[:action]
params[:controller]
params
c
n
@blog.blog_owner?(current_user)
current_user.role.include?('Admin')
c
@blog.blog_owner?(current_user)
@blog.user.blog_owner?(current_user)
@blog
@user
c
redirect_to url_for(controller: 'activities', method: :post)
c
n
c
n
(@blog.blog_owner?(current_user) || current_user.role == "Admin")
c
n
(@blog.blog_owner?(current_user) || current_user.role == "Admin")
c
n
@blog.blog_owner?(current_user) || current_user.role == "Admin"
@blog.blog_owner?(current_user)
c
params
self
current_user.blog_owner?(current_user)
c
self
n
s
current_user
current_user.blog_owner?(current_user)
c
params
c
params
c
n
c
n
@change_user
n
c
n
@change_user
n
params
c
params
c
user_params
c
params
params.require(:user)
params.require(:user).permit(:f_name,:l_name,:password,:password_confirmation,:address,:email,:phone,:about_user,:role)
params
s
@user.update(params[:role])
@user.update(params)
params
user_params
c
@user.update(params[:role])
n
params
c
n
params
c
user_params
